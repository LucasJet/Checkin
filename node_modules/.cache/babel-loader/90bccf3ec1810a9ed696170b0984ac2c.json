{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\TAP\\\\checkin\\\\src\\\\pages\\\\DisciplineForm\\\\index.tsx\";\nimport React, { useRef, useCallback } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport \"./styles.css\";\nimport Button from '../../components/Button';\nimport WarningIcon from \"../../assets/icons/WarningIcon.svg\";\nimport Input from '../../components/Input2';\nimport PageHeader from \"../../components/PageHeader\";\n\nconst DisciplineForm = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        cod_disciplina: Yup.string().required('Código da Disciplina Obrigatória').email('Digite um código válido para a disciplina'),\n        nome_disciplina: Yup.string().required('O nome da disciplina é obrigatório'),\n        semestre: Yup.string().required('O semestre é obrigatório'),\n        data_ini: Yup.date().required('A data de início é obrigatória'),\n        data_fim: Yup.date().required('A data de fim é obrigatória'),\n        docente: Yup.date().required('O docente é obrigatório'),\n        curso: Yup.string().required('Informar o curso'),\n        dia_semana: Yup.string().required('Informar o dia da semana da aula')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      }); // await signIn({\n      //   email: data.email,\n      //   password: data.password,\n      // });\n\n      history.push('/dashboard');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro no preenchimento dos campos',\n        description: 'Todos os campos são obrigatórios!'\n      });\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"create-discipline-form\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Cadastrar disciplina\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Dados da disciplina\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-code\",\n    label: \"C\\xF3digo da disciplina\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-name\",\n    label: \"Nome da Disciplina\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-half\",\n    label: \"Semestre\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-begin\",\n    label: \"Data de in\\xEDcio\",\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-end\",\n    label: \"Data Fim\",\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-teacher\",\n    label: \"Docente\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-course\",\n    label: \"Curso\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"discipline-week_day\",\n    label: \"Dia da semana\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: WarningIcon,\n    alt: \"Aviso importante\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), \"Importante! \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), \"Preencha todos os dados\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Salvar cadastro\")))));\n};\n\nexport default DisciplineForm;","map":{"version":3,"sources":["C:/Users/lucas/Documents/TAP/checkin/src/pages/DisciplineForm/index.tsx"],"names":["React","useRef","useCallback","Form","Yup","useHistory","useToast","getValidationErrors","Button","Input","PageHeader","DisciplineForm","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","cod_disciplina","string","required","email","nome_disciplina","semestre","data_ini","date","data_fim","docente","curso","dia_semana","validate","abortEarly","push","err","ValidationError","errors","type","title","description","WarningIcon"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToast } from '../../hooks/ToastContext';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\nimport \"./styles.css\";\r\nimport Button from '../../components/Button';\r\nimport WarningIcon from \"../../assets/icons/WarningIcon.svg\";\r\nimport Input from '../../components/Input2';\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\ninterface DisciplineFormData{\r\n  cod_disciplina: number;\r\n  nome_disciplina: string;\r\n  semestre: number;\r\n  data_ini: string;\r\n  data_fim:string;\r\n  docente: string;\r\n  curso: string;\r\n  dia_semana: string;\r\n}\r\n\r\nconst DisciplineForm: React.FC = () =>{\r\n\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: DisciplineFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          cod_disciplina: Yup.string()\r\n            .required('Código da Disciplina Obrigatória')\r\n            .email('Digite um código válido para a disciplina'),\r\n          nome_disciplina: Yup.string()\r\n            .required('O nome da disciplina é obrigatório'),\r\n          semestre: Yup.string()\r\n            .required('O semestre é obrigatório'),\r\n          data_ini: Yup.date()\r\n            .required('A data de início é obrigatória'),\r\n          data_fim: Yup.date()\r\n            .required('A data de fim é obrigatória'),\r\n          docente: Yup.date()\r\n            .required('O docente é obrigatório'),\r\n          curso: Yup.string()\r\n            .required('Informar o curso'),\r\n          dia_semana: Yup.string()\r\n            .required('Informar o dia da semana da aula'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        // await signIn({\r\n        //   email: data.email,\r\n        //   password: data.password,\r\n        // });\r\n\r\n        history.push('/dashboard');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no preenchimento dos campos',\r\n          description: 'Todos os campos são obrigatórios!',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n  return (\r\n    <div id=\"create-discipline-form\" className=\"container\">\r\n      <PageHeader title=\"Cadastrar disciplina\"/>\r\n      <Form ref={formRef} onSubmit={handleSubmit}>\r\n        <main>\r\n          <fieldset>\r\n              <legend>Dados da disciplina</legend>\r\n              <Input name=\"discipline-code\" label=\"Código da disciplina\" type=\"text\" />\r\n              <Input name=\"discipline-name\" label=\"Nome da Disciplina\" type=\"text\" />\r\n              <Input name=\"discipline-half\" label=\"Semestre\" type=\"text\" />\r\n              <Input name=\"discipline-begin\" label=\"Data de início\" type=\"date\" />\r\n              <Input name=\"discipline-end\" label=\"Data Fim\" type=\"date\" />\r\n              <Input name=\"discipline-teacher\" label=\"Docente\" type=\"text\" />\r\n              <Input name=\"discipline-course\" label=\"Curso\" type=\"text\" />\r\n              <Input name=\"discipline-week_day\" label=\"Dia da semana\" type=\"text\" />\r\n          </fieldset>\r\n          <footer>\r\n              <p>\r\n                <img src={WarningIcon} alt=\"Aviso importante\" />\r\n                Importante! <br />\r\n                Preencha todos os dados\r\n              </p>\r\n              <Button type=\"submit\">Salvar cadastro</Button>\r\n          </footer>\r\n       </main>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisciplineForm;"]},"metadata":{},"sourceType":"module"}