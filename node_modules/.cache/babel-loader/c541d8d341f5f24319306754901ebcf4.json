{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\TAP\\\\checkin\\\\src\\\\pages\\\\ClassForm\\\\index.tsx\";\nimport React, { useRef, useCallback } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport \"./styles.css\";\nimport Button from '../../components/Button';\nimport WarningIcon from \"../../assets/icons/WarningIcon.svg\";\nimport Input from '../../components/Input2';\nimport PageHeader from \"../../components/PageHeader\";\n\nconst ClassForm = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        turma: Yup.string().required('Turma Obrigatória'),\n        disciplina: Yup.string().required('Disciplina Obrigatória'),\n        aluno: Yup.string().required('Aluno Obrigatório')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      history.push('/dashboard');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro no preenchimento dos campos',\n        description: 'Todos os campos são obrigatórios!'\n      });\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"create-class-form\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Cadastrar turma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Dados da turma\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"turma\",\n    label: \"C\\xF3digo da turma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"disciplina\",\n    label: \"C\\xF3digo da disciplina\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"aluno\",\n    label: \"Aluno\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: WarningIcon,\n    alt: \"Aviso importante\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), \"Importante! \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }), \"Preencha todos os dados\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Salvar cadastro\")))));\n};\n\nexport default ClassForm;","map":{"version":3,"sources":["C:/Users/lucas/Documents/TAP/checkin/src/pages/ClassForm/index.tsx"],"names":["React","useRef","useCallback","Form","Yup","useHistory","useToast","getValidationErrors","Button","Input","PageHeader","ClassForm","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","turma","string","required","disciplina","aluno","validate","abortEarly","push","err","ValidationError","errors","type","title","description","WarningIcon"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToast } from '../../hooks/ToastContext';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\nimport \"./styles.css\";\r\nimport Button from '../../components/Button';\r\nimport WarningIcon from \"../../assets/icons/WarningIcon.svg\";\r\nimport Input from '../../components/Input2';\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\ninterface classFormData{\r\n  turma: number;\r\n  disciplina: number;\r\n  aluno: number;\r\n}\r\n\r\nconst ClassForm: React.FC = () =>{\r\n\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: classFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          turma: Yup.string()\r\n            .required('Turma Obrigatória'),\r\n          disciplina: Yup.string()\r\n            .required('Disciplina Obrigatória'),\r\n          aluno: Yup.string()\r\n            .required('Aluno Obrigatório'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        history.push('/dashboard');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no preenchimento dos campos',\r\n          description: 'Todos os campos são obrigatórios!',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n  return (\r\n    <div id=\"create-class-form\" className=\"container\">\r\n      <PageHeader title=\"Cadastrar turma\" />\r\n      <Form ref={formRef} onSubmit={handleSubmit}>\r\n        <main>\r\n          <fieldset>\r\n              <legend>Dados da turma</legend>\r\n              <Input name=\"turma\" label=\"Código da turma\" />\r\n              <Input name=\"disciplina\" label=\"Código da disciplina\" type=\"text\" />\r\n              <Input name=\"aluno\" label=\"Aluno\" type=\"text\" />\r\n          </fieldset>\r\n          <footer>\r\n              <p>\r\n                <img src={WarningIcon} alt=\"Aviso importante\" />\r\n                Importante! <br />\r\n                Preencha todos os dados\r\n              </p>\r\n              <Button type=\"submit\">Salvar cadastro</Button>\r\n          </footer>\r\n       </main>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClassForm;"]},"metadata":{},"sourceType":"module"}