{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\TAP\\\\checkin\\\\src\\\\components\\\\LoginContainer\\\\index.tsx\";\nimport React, { useRef, useCallback } from 'react';\nimport { FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/AuthContext';\nimport { useToast } from '../../hooks/ToastContext';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport \"./styles.css\";\nimport Button from '../Button'; // import SimpleButton from '../../components/SimpleButton';\n\nimport Input from '../../components/Input2';\n\n// const LoginContainer: React.FC<LoginContainerProps> = (props) => {\nconst LoginContainer = () => {\n  const formRef = useRef(null);\n  const {\n    signIn\n  } = useAuth();\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail Obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'Senha Obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await signIn({\n        email: data.email,\n        password: data.password\n      });\n      history.push('/dashboard');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na Autenticação',\n        description: 'Ocorreu um erro ao fazer login, verifique as credenciais!'\n      });\n    }\n  }, [signIn, addToast, history]);\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a login\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    placeholder: \"Senha\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n};\n\nexport default LoginContainer;","map":{"version":3,"sources":["C:/Users/lucas/Documents/TAP/checkin/src/components/LoginContainer/index.tsx"],"names":["React","useRef","useCallback","FiMail","FiLock","Form","Yup","useHistory","useAuth","useToast","getValidationErrors","Button","Input","LoginContainer","formRef","signIn","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","min","validate","abortEarly","push","err","ValidationError","errors","type","title","description"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react';\r\nimport { FiMail, FiLock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/AuthContext';\r\nimport { useToast } from '../../hooks/ToastContext';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\nimport \"./styles.css\";\r\nimport Button from '../Button';\r\n// import SimpleButton from '../../components/SimpleButton';\r\nimport Input from '../../components/Input2';\r\n\r\ninterface LoginContainerProps {\r\n}\r\n\r\ninterface SignInFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n// const LoginContainer: React.FC<LoginContainerProps> = (props) => {\r\nconst LoginContainer: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { signIn } = useAuth();\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignInFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail Obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().min(6, 'Senha Obrigatória'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await signIn({\r\n          email: data.email,\r\n          password: data.password,\r\n        });\r\n\r\n        history.push('/dashboard');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na Autenticação',\r\n          description: 'Ocorreu um erro ao fazer login, verifique as credenciais!',\r\n        });\r\n      }\r\n    },\r\n    [signIn, addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Form ref={formRef} onSubmit={handleSubmit}>\r\n      <div className=\"login-container\">\r\n        <strong>Faça login</strong>\r\n        <form id=\"login-form\">\r\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n          <Input name=\"password\" icon={FiLock} placeholder=\"Senha\" type=\"password\"/>\r\n        </form>\r\n        <Button type=\"submit\">Entrar</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n"]},"metadata":{},"sourceType":"module"}