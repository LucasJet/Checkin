{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\TAP\\\\checkin\\\\src\\\\hooks\\\\AuthContext.tsx\";\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\nconst AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@appAMF:token');\n    const user = localStorage.getItem('@appAMF:user');\n\n    if (token && user) {\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@appAMF:token', token);\n    localStorage.setItem('@appAMF:user', JSON.stringify(user));\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@appAMF:token');\n    localStorage.removeItem('@appAMF:user');\n    setData({});\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport function useAuth() {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('UseAuth must be used within a AuthProvider');\n  }\n\n  return context;\n}\nexport default AuthContext;","map":{"version":3,"sources":["C:/Users/lucas/Documents/TAP/checkin/src/hooks/AuthContext.tsx"],"names":["React","createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","JSON","parse","signIn","email","password","response","post","setItem","stringify","signOut","removeItem","useAuth","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,UAArD,QAAsE,OAAtE;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAkBA,MAAMC,WAAW,GAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,MAAMM,YAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAClD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAY,MAAI;AAC5C,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AAEA,QAAIF,KAAK,IAAIG,IAAb,EAAkB;AACd,aAAO;AAACH,QAAAA,KAAD;AAAQG,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAX;AAAd,OAAP;AACH;;AAED,WAAO,EAAP;AAEH,GAV+B,CAAhC;AAYA,QAAMG,MAAM,GAAGf,WAAW,CAAC,OAAM;AAACgB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAN,KAA4B;AACnD,UAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB;AAACH,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAArB,CAAvB;AACA,UAAM;AAACR,MAAAA,KAAD;AAAQG,MAAAA;AAAR,QAAgBM,QAAQ,CAACX,IAA/B;AAEAG,IAAAA,YAAY,CAACU,OAAb,CAAqB,eAArB,EAAsCX,KAAtC;AACAC,IAAAA,YAAY,CAACU,OAAb,CAAqB,cAArB,EAAqCP,IAAI,CAACQ,SAAL,CAAeT,IAAf,CAArC;AAEAJ,IAAAA,OAAO,CAAC;AAACC,MAAAA,KAAD;AAAQG,MAAAA;AAAR,KAAD,CAAP;AAEH,GATyB,EASvB,EATuB,CAA1B;AAWA,QAAMU,OAAO,GAAGtB,WAAW,CAAC,MAAK;AAE7BU,IAAAA,YAAY,CAACa,UAAb,CAAwB,eAAxB;AACAb,IAAAA,YAAY,CAACa,UAAb,CAAwB,cAAxB;AAEAf,IAAAA,OAAO,CAAC,EAAD,CAAP;AAEH,GAP0B,EAOzB,EAPyB,CAA3B;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAACL,IAAI,CAACK,IAAX;AAAiBG,MAAAA,MAAjB;AAAyBO,MAAAA;AAAzB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,QADL,CADJ;AAMH,CAvCM;AAyCP,OAAO,SAASkB,OAAT,GAAoC;AACvC,QAAMC,OAAO,GAAGvB,UAAU,CAACE,WAAD,CAA1B;;AAEA,MAAK,CAACqB,OAAN,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACH;;AAED,SAAOD,OAAP;AACH;AAED,eAAerB,WAAf","sourcesContent":["import React, {createContext, useCallback, useState, useContext} from 'react';\r\nimport api from '../services/api';\r\n\r\ninterface AuthState{\r\n    token: string;\r\n    user: object;\r\n}\r\n\r\ninterface SignInCredentials{\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface AuthContextData{\r\n    user: object;\r\n    signIn(credentials:SignInCredentials): Promise<void>;\r\n    signOut():void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nexport const AuthProvider: React.FC = ({children}) => {\r\n    const [data, setData] = useState<AuthState>(()=>{\r\n        const token = localStorage.getItem('@appAMF:token');\r\n        const user = localStorage.getItem('@appAMF:user');\r\n\r\n        if (token && user){\r\n            return {token, user: JSON.parse(user)};\r\n        }\r\n\r\n        return {} as AuthState;\r\n\r\n    });\r\n\r\n    const signIn = useCallback(async({email, password}) => {\r\n        const response = await api.post('sessions', {email, password});\r\n        const {token, user} = response.data;\r\n\r\n        localStorage.setItem('@appAMF:token', token);\r\n        localStorage.setItem('@appAMF:user', JSON.stringify(user));\r\n\r\n        setData({token, user});\r\n\r\n    }, []);\r\n\r\n    const signOut = useCallback(() =>{\r\n\r\n        localStorage.removeItem('@appAMF:token');\r\n        localStorage.removeItem('@appAMF:user');\r\n\r\n        setData({} as AuthState);\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{user:data.user, signIn, signOut}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n};\r\n\r\nexport function useAuth(): AuthContextData {\r\n    const context = useContext(AuthContext);\r\n\r\n    if  (!context){\r\n        throw new Error('UseAuth must be used within a AuthProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}